// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Diffuser

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

uint width;
uint height;

float dT;
float decay;

[numthreads(8,8,1)]
void Diffuser (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    if (id.x < 0 || id.y < 0 || id.x >= width || id.y >= height) {
        return;
    }

	float4 sum = 0;
	float4 original = Result[id.xy];

	for (int offsetX = -1; offsetX <= 1; offsetX++) {
		for (int offsetY = -1; offsetY <= 1; offsetY++) {
			int sampleX = min(width - 1, max(0, id.x + offsetX));
			int sampleY = min(height - 1, max(0, id.y + offsetY));
			sum += Result[int2(sampleX, sampleY)];
		}
	}

	float4 blurredCol = sum / 9;
	float diffuseWeight = saturate(7 * dT);
	blurredCol = original * (1 - diffuseWeight) + blurredCol * (diffuseWeight);

	Result[id.xy] = max(0,blurredCol-decay*dT);;
}
